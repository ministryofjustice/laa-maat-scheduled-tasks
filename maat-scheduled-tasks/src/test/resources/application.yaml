server:
  port: 8498

spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: maat-scheduled-tasks
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate.enable_lazy_load_no_trans: true
      hibernate.jdbc.lob.non_contextual_creation: true
  datasource:
    url: jdbc:h2:mem:mla;MODE=Oracle;DB_CLOSE_DELAY=-1;IGNORE_CATALOGS=TRUE;NON_KEYWORDS=VALUE;INIT=CREATE SCHEMA IF NOT EXISTS togdata\;CREATE SCHEMA IF NOT EXISTS hub\;SET SCHEMA togdata
    username: sa
    password:
    driver-class-name: org.h2.Driver
    name: TOGDATA

  sql:
    init:
      platform: h2
      mode: embedded

  security:
    oauth2:
      client:
        provider:
          cclf:
            token-uri: http://localhost:${wiremock.server.port}/oauth2/token
          ccr:
            token-uri: http://localhost:${wiremock.server.port}/oauth2/token
        registration:
          cclf:
            client-id: dummy-client
            client-secret: dummy-secret
            authorization-grant-type: client_credentials
          ccr:
            client-id: dummy-client
            client-secret: dummy-secret
            authorization-grant-type: client_credentials

      resource-server:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:9999}

httpRequest:
  scope: maat-scheduled-tasks-dev

maat_batch:
  lmr_reports:
    cron_expression: 0 0 9 * * *
  evidence_reminder_letter:
    cron_expression: 0 0 9 * * *
  inactive_users:
    cron_expression: 0 0 9 * * *
  fa_fix:
    cron_expression: 0 0 9 * * *
  central_print:
    cron_expression: 0 0 9 * * *

xhibit-batch:
  trial_data_processing:
    cron_expression: 0 0 9 * * *
  appeal_data_processing:
    cron_expression: 0 0 9 * * *
  fetch-size: 1
  s3-data-bucket-name: test-bucket
  object-key-errored-prefix: "errored"
  object-key-processed-prefix: "processed"
  object-key-trial-prefix: "incoming/trial/"
  object-key-appeal-prefix: "incoming/appeal/"

billing:
  user-modified: "test"
  cclf_extract:
    cron_expression: 0 0 9 * * *
  cleanup_data_feed_log:
    cron_expression: 0 0 9 * * *

services:
  cclf-api:
    base-url: http://localhost:${wiremock.server.port}/cclf/api/internal/v1
    registrationId: cclf

  ccr-api:
    base-url: http://localhost:${wiremock.server.port}/ccr/api/internal/v1/
    registrationId: ccr

resilience4j:
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 2s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retry-exceptions:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException.BadGateway
          - org.springframework.web.reactive.function.client.WebClientResponseException.TooManyRequests
          - org.springframework.web.reactive.function.client.WebClientResponseException.ServiceUnavailable
          - org.springframework.web.reactive.function.client.WebClientResponseException.GatewayTimeout

aws:
  region: eu-west-2