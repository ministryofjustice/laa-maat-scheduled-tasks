server:
  port: 8499

management:
  server:
    port: 8510
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

spring:
  application:
    name: maat-scheduled-tasks
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: oracle.jdbc.OracleDriver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 5
      max-lifetime: 1900000          # 31 mins+
      leak-detection-threshold: 1860000  # ~31 mins
      idle-timeout: 600000           # 10 mins
    prometheus:
      enabled: true

  security:
    oauth2:
      client:
        provider:
          cclf:
            token-uri: ${CCLF_API_OAUTH_URL}
          ccr:
            token-uri: ${CCR_API_OAUTH_URL}
        registration:
          cclf:
            client-id: ${CCLF_API_OAUTH_CLIENT_ID}
            client-secret: ${CCLF_API_OAUTH_CLIENT_SECRET}
            authorization-grant-type: client_credentials
          ccr:
            client-id: ${CCR_API_OAUTH_CLIENT_ID}
            client-secret: ${CCR_API_OAUTH_CLIENT_SECRET}
            authorization-grant-type: client_credentials
      resource-server:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}

maat_batch:
  lmr_reports:
    cron_expression:  ${LMR_REPORTS}
  evidence_reminder_letter:
    cron_expression:  ${EVIDENCE_REMINDER_LETTER}
  inactive_users:
    cron_expression: ${INACTIVATE_USERS}
  fa_fix:
    cron_expression: ${FA_FIX}
  central_print:
    cron_expression: ${CENTRAL_PRINT}

xhibit-batch:
  appeal_data_processing:
    cron_expression: ${APPEAL_DATA_CRON_EXPRESSION}
  trial_data_processing:
    cron_expression: ${TRIAL_DATA_CRON_EXPRESSION}

  object-key-appeal-prefix: "incoming/appeal/"
  object-key-trial-prefix: "incoming/trial/"

  object-key-processed-prefix: "processed"
  object-key-errored-prefix: "errored"

  s3-data-bucket-name: ${S3_DATA_BUCKET_NAME}

billing:
  cclf_extract:
    user_modified: "system"
    cron_expression: ${BILLING_CCLF_EXTRACT_CRON_EXPRESSION}
  cleanup_data_feed_log:
    cron_expression: ${BILLING_LOG_CLEANUP_CRON_EXPRESSION}
  
sentry:
  dsn: ${SENTRY_DSN}
  environment: ${SENTRY_ENV}
  release: 0.0.1
  servername: aws-eks-container
  send-default-pii: true
  attach-stacktrace: true
  sample-rate: ${SENTRY_SAMPLE_RATE}

services:
  cclf-api:
    base-url: ${CCLF_API_BASE_URL}
    registrationId: cclf

resilience4j:
  retry:
    configs:
      default:
        max-attempts: 3
        wait-duration: 2s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retry-exceptions:
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException.BadGateway
          - org.springframework.web.reactive.function.client.WebClientResponseException.TooManyRequests
          - org.springframework.web.reactive.function.client.WebClientResponseException.ServiceUnavailable
          - org.springframework.web.reactive.function.client.WebClientResponseException.GatewayTimeout
            
aws:
  region: eu-west-2
